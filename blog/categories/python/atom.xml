<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">

  <title><![CDATA[Category: python | Pragmatic Geographer]]></title>
  <link href="http://bwreilly.github.io/blog/categories/python/atom.xml" rel="self"/>
  <link href="http://bwreilly.github.io/"/>
  <updated>2013-07-21T19:20:18-07:00</updated>
  <id>http://bwreilly.github.io/</id>
  <author>
    <name><![CDATA[Ben Reilly]]></name>
    
  </author>
  <generator uri="http://octopress.org/">Octopress</generator>

  
  <entry>
    <title type="html"><![CDATA[AI/Machine Learning Python Samples]]></title>
    <link href="http://bwreilly.github.io/blog/2012/04/18/ai-slash-machine-learning-python-samples/"/>
    <updated>2012-04-18T18:54:00-07:00</updated>
    <id>http://bwreilly.github.io/blog/2012/04/18/ai-slash-machine-learning-python-samples</id>
    <content type="html"><![CDATA[<p><div class="posterous_autopost">
I have a <a href="https://github.com/bwreilly/ai-ml">new repository on github</a> that demonstrates a couple of basic machine learning and AI techniques, principally picked up from CS_373 and Stanford&rsquo;s Introduction to AI. It&rsquo;s all explained there, and I intend to add to it as I continue my eduction in the field.</p>

<p>Machine learning is something I rarely hear talked about in the spatial developer field. This is unfortunate, as machine learning can be an effecitive means of analyzing, managing, and generating spatial information.</p>

<p>Another cool thing is the documentation I put together for this. I used <a href="http://fitzgen.github.com/pycco/">pycco</a>, a very easy to use annotated code document generator (port of <a href="http://jashkenas.github.com/docco/">Docco</a>). Here is a <a href="http://bwreilly.github.com/ai-ml/docs/pfilter.html">particle filter</a>. Here is a <a href="http://bwreilly.github.com/ai-ml/docs/kalman.html">Kalman filter</a>.</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Geometric Network Geoprocessing]]></title>
    <link href="http://bwreilly.github.io/blog/2010/07/21/geometric-network-geoprocessing/"/>
    <updated>2010-07-21T19:04:00-07:00</updated>
    <id>http://bwreilly.github.io/blog/2010/07/21/geometric-network-geoprocessing</id>
    <content type="html"><![CDATA[<p><div class="posterous_autopost">
I&rsquo;ve been hammering away at a GIS migration project that has been going  on far longer than anyone expected it might take, but I&rsquo;ve gotten the opportunity to hack away at some Python to more or less fix a problem I found on <a href="http://www.thegisforum.com/forums/t/7672.aspx">TheGISForum</a>:</p>

<p><blockquote class="posterous_medium_quote">
I  currently have a geometric network that I&rsquo;ve been working with  using  the Utility Network Analyst tools. However, I&rsquo;ve been trying to  perform  a few tasks that I&rsquo;ve noticed the Network Analyst tools provide,  but  the Utility Network Analyst does not.
Specifically, I want to  place barriers at all locations specified by a  point feature class &ndash; a  functionality provided by the &ldquo;Add Locations&rdquo;  tool in the Network  Analyst Toolset.
Is there a way to use the network analyst tools  on a geometric network?</blockquote></p>

<p>The answer, sadly, is no. As far as I can tell, ESRI has not released any geoprocessing  tools for their Geometric Network.
But it is possible to roll-your-own  solution to get the same kind of tools by using existing open source  libraries. I have a <a href="http://bitbucket.org/gallipoli/utilitynetwork/">work-in-progress project</a> along these exact lines.</p>
]]></content>
  </entry>
  
</feed>
