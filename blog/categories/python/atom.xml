<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">

  <title><![CDATA[Category: python | Pragmatic Geographer]]></title>
  <link href="http://bwreilly.github.io/blog/categories/python/atom.xml" rel="self"/>
  <link href="http://bwreilly.github.io/"/>
  <updated>2013-07-25T11:03:04-07:00</updated>
  <id>http://bwreilly.github.io/</id>
  <author>
    <name><![CDATA[Ben Reilly]]></name>
    
  </author>
  <generator uri="http://octopress.org/">Octopress</generator>

  
  <entry>
    <title type="html"><![CDATA[Testing search (Haystack) in Django]]></title>
    <link href="http://bwreilly.github.io/blog/2013/07/21/testing-search-haystack-in-django/"/>
    <updated>2013-07-21T19:33:00-07:00</updated>
    <id>http://bwreilly.github.io/blog/2013/07/21/testing-search-haystack-in-django</id>
    <content type="html"><![CDATA[<p><a href="https://docs.djangoproject.com/en/dev/topics/testing/overview/">Django&rsquo;s build-in testing framework</a> is extremely handy. As long as you use the ORM with a supported data store, a test database is used for the duration of the tests and is cleaned up in between unit tests. There is no need for elaborate mocking &ndash; something I had grown accustom to in .NET.</p>

<p>Here is a quick sample, edited for brevity:</p>

<p>``` bash
$ ./manage.py test appname -v 2</p>

<p>Creating test database for alias &lsquo;default&rsquo; (&lsquo;test_projectname&rsquo;)…
Syncing&hellip;
Creating tables &hellip;
test_first (projectname.test.SampleTestClass) &hellip; ok
test_second (projectname.test.SampleTestClass) &hellip; ok
test_third (projectname.test.SampleTestClass) &hellip; ok
Ran 3 tests in 1.260s
OK
Destroying test database for alias &lsquo;default&rsquo; (&lsquo;test_projectname&rsquo;)…
```</p>

<p>But if you are using some external source of data, it is necessary to create a mock or some fake environment (as Django does).</p>

<p><a href="http://haystacksearch.org/">Haystack</a> is a handy library that abstracts out the details of various search engines. You get some powerful features build into something like <a href="http://www.elasticsearch.org/">Elasticsearch</a> &ndash; high availability, full text search, spelling correct, <em>more like this</em>, etc &ndash; in some functions and data structures familiar to Django using developers.</p>

<p>But if you are <a href="https://en.wikipedia.org/wiki/Integration_testing">integration testing</a>, and you should be &ndash; the tests are calling your views directly and your views are updating or retrieving data from an external search engine, you are going to potentially have a bad time. Stuff will be persisted between unit tests and your results will be likely be inconsistent.</p>

<p>The solution is pretty simple actually. Fire up a new index, override the settings such that the new index is the target for the Haystack calls for the duration of tests, and clear the index between tests.</p>

<p>``` python
TEST_INDEX = {</p>

<pre><code>'default': {
    'ENGINE': 'haystack.backends.elasticsearch_backend.ElasticsearchSearchEngine',
    'URL': 'http://127.0.0.1:9200/',
    'TIMEOUT': 60 * 10,
    'INDEX_NAME': 'test_index',
},
</code></pre>

<p>}</p>

<p>@override_settings(HAYSTACK_CONNECTIONS=TEST_INDEX)
class BaseTestCase(TestCase):</p>

<pre><code>def setUp(self):
    haystack.connections.reload('default')
    super(BaseTestCase, self).setUp()

def tearDown(self):
    call_command('clear_index', interactive=False, verbosity=0)
</code></pre>

<p>```
<a href="https://gist.github.com/bwreilly/6050981">Gist</a></p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[AI/Machine Learning Python Samples]]></title>
    <link href="http://bwreilly.github.io/blog/2012/04/18/ai-slash-machine-learning-python-samples/"/>
    <updated>2012-04-18T18:54:00-07:00</updated>
    <id>http://bwreilly.github.io/blog/2012/04/18/ai-slash-machine-learning-python-samples</id>
    <content type="html"><![CDATA[<p><div class="posterous_autopost">
I have a <a href="https://github.com/bwreilly/ai-ml">new repository on github</a> that demonstrates a couple of basic machine learning and AI techniques, principally picked up from CS_373 and Stanford&rsquo;s Introduction to AI. It&rsquo;s all explained there, and I intend to add to it as I continue my eduction in the field.</p>

<p>Machine learning is something I rarely hear talked about in the spatial developer field. This is unfortunate, as machine learning can be an effecitive means of analyzing, managing, and generating spatial information.</p>

<p>Another cool thing is the documentation I put together for this. I used <a href="http://fitzgen.github.com/pycco/">pycco</a>, a very easy to use annotated code document generator (port of <a href="http://jashkenas.github.com/docco/">Docco</a>). Here is a <a href="http://bwreilly.github.com/ai-ml/docs/pfilter.html">particle filter</a>. Here is a <a href="http://bwreilly.github.com/ai-ml/docs/kalman.html">Kalman filter</a>.</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Introducting (belatedly) nx_spatial]]></title>
    <link href="http://bwreilly.github.io/blog/2011/02/27/introducting-belatedly-nx-spatial/"/>
    <updated>2011-02-27T20:00:00-08:00</updated>
    <id>http://bwreilly.github.io/blog/2011/02/27/introducting-belatedly-nx-spatial</id>
    <content type="html"><![CDATA[<p>
It's been more or less done a while, but here is finally a blog post about it.</p>


<p>
<a href="https://bitbucket.org/gallipoli/nx_spatial">nx_spatial</a> is a collection of addon functions for the <a href="http://networkx.lanl.gov/index.html">networkx</a> python graph library. What can you do with it?</p>


<ol>
<li>Load GIS formats into <a href="http://networkx.lanl.gov/reference/introduction.html">networkx graphs</a> (where you can do all sorts of <a href="http://networkx.lanl.gov/reference/index.html">crazy analytics</a> on them)</li>
<li>Perform upstream and downstream traces with stopping points.</li>
<li>Set sources and find/repair edges that don't have the correct to/from nodes.</li>
</ol>


<p>
Example from the <a href="https://bitbucket.org/gallipoli/nx_spatial/wiki/Home">wiki</a>:</p>


<p><code>python
import nx_spatial as ns
net = ns.read_shp('/shapes/lines.shp')
net.edges() [[(1.0, 1.0), (2.0, 2.0)], [(2.0, 2.0), (3.0, 3.0)], [(0.9, 0.9), (4.0, 2.0)]]
net.nodes() [(1.0, 1.0), (2.0, 2.0), (3.0, 3.0), (0.9, 0.9), (4.0, 2.0)]
source = (2.0, 2.0)
ns.setdirection(net, source)
net.edges() [[(2.0, 2.0), (1.0, 1.0)], [(2.0, 2.0), (3.0, 3.0)], [(0.9, 0.9), (4.0, 2.0)]]
</code></p>

<p>
Available on <a href="http://pypi.python.org/pypi/nx_spatial/0.3dev">pypi</a> or <a href="https://bitbucket.org/gallipoli/nx_spatial/wiki/Home">bitbucket</a>. Eventually I want to integrate it with networkx trunk (loading shapefiles is already in 1.4).</p>


<p style="font-size: 10px;">
<a href="http://posterous.com/">Posted via email</a>  from <a href="http://pragmaticgeographer.posterous.com/introducing-belatedly-nxspatial">The Pragmatic Geographer</a> </p>



]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Geometric Network Geoprocessing]]></title>
    <link href="http://bwreilly.github.io/blog/2010/07/21/geometric-network-geoprocessing/"/>
    <updated>2010-07-21T19:04:00-07:00</updated>
    <id>http://bwreilly.github.io/blog/2010/07/21/geometric-network-geoprocessing</id>
    <content type="html"><![CDATA[<p><div class="posterous_autopost">
I&rsquo;ve been hammering away at a GIS migration project that has been going  on far longer than anyone expected it might take, but I&rsquo;ve gotten the opportunity to hack away at some Python to more or less fix a problem I found on <a href="http://www.thegisforum.com/forums/t/7672.aspx">TheGISForum</a>:</p>

<p><blockquote class="posterous_medium_quote">
I  currently have a geometric network that I&rsquo;ve been working with  using  the Utility Network Analyst tools. However, I&rsquo;ve been trying to  perform  a few tasks that I&rsquo;ve noticed the Network Analyst tools provide,  but  the Utility Network Analyst does not.
Specifically, I want to  place barriers at all locations specified by a  point feature class &ndash; a  functionality provided by the &ldquo;Add Locations&rdquo;  tool in the Network  Analyst Toolset.
Is there a way to use the network analyst tools  on a geometric network?</blockquote></p>

<p>The answer, sadly, is no. As far as I can tell, ESRI has not released any geoprocessing  tools for their Geometric Network.
But it is possible to roll-your-own  solution to get the same kind of tools by using existing open source  libraries. I have a <a href="http://bitbucket.org/gallipoli/utilitynetwork/">work-in-progress project</a> along these exact lines.</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Fun with SQL Spatial]]></title>
    <link href="http://bwreilly.github.io/blog/2010/02/05/fun-with-sql-spatial/"/>
    <updated>2010-02-05T19:43:00-08:00</updated>
    <id>http://bwreilly.github.io/blog/2010/02/05/fun-with-sql-spatial</id>
    <content type="html"><![CDATA[<p>This is old hat by now, but I love how much cruft can be killed by outright avoiding older APIs.<br/>
A unique location number needed to be generated for an engineering design tool. A vendor contact sent an example to work off that was about 400 lines of C# code. This little stored procedure replaced basically all of it.
```sql
CREATE PROCEDURE [sde].[IntersectGrid]
@x FLOAT, @y FLOAT
AS SET NOCOUNT ON
BEGIN</p>

<p>DECLARE @g geometry;
DECLARE @grid int;
SET @g = geometry::STPointFromText(&lsquo;POINT (&rsquo;+str(@x)+&lsquo; &rsquo;+ STR(@y)+&lsquo;)&rsquo;, 2);
SET @grid = (
  SELECT TOP 1 [areaName]
  FROM GridTable
  Where @g.STWithin(Shape) &lt;&gt; 0
 )
return @grid
END
```
How do you make this 400 lines? Easy, use the ArcObject API to do the intersect. Instantiating dozens of objects, checking out/in licenses, and using reflection to read a config file (not sure why they didn&rsquo;t just use AppSettings) adds up fast.
I could probably even do it with even less effort using <a href="http://trac.gispython.org/lab/wiki/Shapely">Shapely</a>, but no one else is really familiar with Python in this situation (vendors or coworkers).</p>
]]></content>
  </entry>
  
</feed>
